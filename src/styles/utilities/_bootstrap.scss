@import '../_vars.scss';

// margin and padding

@each $key, $value in $spaces {
  @if $key == auto {
    .m-#{$key} {
      margin: $value !important;
    }

    .mr-#{$key} {
      margin-right: $value !important;
    }

    .ms-#{$key} {
      margin-inline-start: $value !important;
    }

    .ml-#{$key} {
      margin-left: $value !important;
    }

    .me-#{$key} {
      margin-inline-end: $value !important;
    }

    .mt-#{$key} {
      margin-top: $value !important;
    }

    .mb-#{$key} {
      margin-bottom: $value !important;
    }

    .mx-#{$key} {
      margin-inline-start: $value !important;
      margin-inline-end: $value !important;
    }

    .my-#{$key} {
      margin-top: $value !important;
      margin-bottom: $value !important;
    }
  } @else {
    .p-#{$key} {
      padding: #{$value}rem !important;
    }

    .pr-#{$key} {
      padding-right: #{$value}rem !important;
    }

    .ps-#{$key} {
      padding-inline-start: #{$value}rem !important;
    }

    .pl-#{$key} {
      padding-left: #{$value}rem !important;
    }

    .pe-#{$key} {
      padding-inline-end: #{$value}rem !important;
    }

    .pb-#{$key} {
      padding-bottom: #{$value}rem !important;
    }

    .pt-#{$key} {
      padding-top: #{$value}rem !important;
    }

    .px-#{$key} {
      padding-inline-start: #{$value}rem !important;
      padding-inline-end: #{$value}rem !important;
    }

    .py-#{$key} {
      padding-top: #{$value}rem !important;
      padding-bottom: #{$value}rem !important;
    }

    .m-#{$key} {
      margin: #{$value}rem !important;
    }

    .mr-#{$key} {
      margin-right: #{$value}rem !important;
    }

    .ms-#{$key} {
      margin-inline-start: #{$value}rem !important;
    }

    .ml-#{$key} {
      margin-left: #{$value}rem !important;
    }

    .me-#{$key} {
      margin-inline-end: #{$value}rem !important;
    }

    .mb-#{$key} {
      margin-bottom: #{$value}rem !important;
    }

    .mt-#{$key} {
      margin-top: #{$value}rem !important;
    }

    .mx-#{$key} {
      margin-inline-start: #{$value}rem !important;
      margin-inline-end: #{$value}rem !important;
    }

    .my-#{$key} {
      margin-top: #{$value}rem !important;
      margin-bottom: #{$value}rem !important;
    }
  }
}

// display

@each $display in $displayProps {
  .d-#{$display} {
    display: $display !important;
  }
}

// position

@each $position in $positions {
  .p-#{$position} {
    position: $position !important;
  }
}

// gap

@each $key, $value in $gaps {
  .gap-#{$key} {
    gap: #{$value}rem !important;
  }
}

// flex-wrap

@each $state in $flexWrapStates {
  .flex-#{$state} {
    flex-wrap: $state !important;
  }
}

// flex-direction

@each $direction in $flexDirectionStates {
  .flex-#{$direction} {
    flex-direction: $direction !important;
  }
}
